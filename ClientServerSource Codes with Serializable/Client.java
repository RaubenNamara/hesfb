/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simple_client_server_with_serializable;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author HP
 */
public class Client extends javax.swing.JFrame {
     ObjectOutputStream clientObjectStreamWriter;
     
     ObjectInputStream clientObjectStreamReader, isReader;
     
     //ServerSocket serverSock ;
     Socket sock;
     SerializableClass serialObj;
    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
        clientObjectStreamWriter = null;
        clientObjectStreamReader = null;
        sock = null;
        serialObj = null;
    }
    public void go() {
        //clientOutputStreams = new ArrayList();
		try{
                        sock = new Socket("127.0.0.1",50000);
			
			
                        
			//serverSock = new ServerSocket(5000);
                        serialObj= new SerializableClass();
			//while(true){
				
				//clientObjectStreamWriter.flush(); // clear stream
				//clientSocket = serverSock.accept();
				clientObjectStreamWriter = new ObjectOutputStream(sock.getOutputStream());
						
                                clientObjectStreamReader = new ObjectInputStream(sock.getInputStream());
			
                                System.out.println("networking established");
				
				Thread t = new Thread(new ClientRunnable());

				t.start();
				System.out.println("got a connection");
			//}//close while
		}catch(Exception ex){
			ex.printStackTrace();
		}
    }
    
    public class ClientRunnable implements Runnable{

		//public ClientRunnable(){
		//	try{

		//	}catch(Exception ex){ex.printStackTrace();}
		//}//close constructor
		
		
		public void run(){
                    try{   
                        //while(true){
                        while((serialObj =  (SerializableClass)clientObjectStreamReader.readObject()) != null)
                        {
                            txtName.setText(serialObj.name);
                            ////////open the file//////////
                            if(Desktop.isDesktopSupported()){
                            try{
                                File myfile = serialObj.myfile;
                                Desktop.getDesktop().open(myfile);
                            }catch(IOException ex){}
                            }
                            /////////////////
                         go();   
                        }
                        
                        //}
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    } catch (ClassNotFoundException ex) {
                        ex.printStackTrace();
                    }
		}//close run
                
	}//close inner class
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Client");

        lblName.setText("Name");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblName)
                        .addGap(40, 40, 40)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(btnSave)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
         serialObj.name = txtName.getText();
        try {
             
             // send object to server
             clientObjectStreamWriter.writeObject(serialObj);
             //clientObjectStreamWriter.flush(); // not to corrupt the stream
         } catch (IOException ex) {
             ex.printStackTrace();
         }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       // java.awt.EventQueue.invokeLater(new Runnable() {
          //  public void run() {
             //   new Client().setVisible(true);
                Client c = new Client();
                c.setVisible(true);
                c.setLocationRelativeTo(null);
                c.go();
           // }
       // });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblName;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
